{"_id":"s3","_rev":"124-82415cccc78f1d6190e3c7af1aa7769c","name":"s3","description":"high level amazon s3 client. upload and download files and directories","dist-tags":{"latest":"4.4.0"},"versions":{"0.0.3":{"name":"s3","version":"0.0.3","description":"high level amazon s3 client using knox as a backend","main":"index.js","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/superjoe30/node-s3-client"},"keywords":["amazon","s3","high","level","api"],"author":{"name":"Andrew Kelley"},"license":"BSD","devDependencies":{"mocha":"~1.7.1","mkdirp":"~0.3.4"},"dependencies":{"knox":"~0.4.1"},"_id":"s3@0.0.3","dist":{"shasum":"3b27890895ddb93add44b3168413d0a2b571b5cf","tarball":"https://registry.npmjs.org/s3/-/s3-0.0.3.tgz"},"_npmVersion":"1.1.65","_npmUser":{"name":"superjoe","email":"superjoe30@gmail.com"},"maintainers":[{"name":"superjoe","email":"superjoe30@gmail.com"}],"directories":{}},"0.0.4":{"name":"s3","version":"0.0.4","description":"high level amazon s3 client using knox as a backend","main":"index.js","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/superjoe30/node-s3-client"},"keywords":["amazon","s3","high","level","api"],"author":{"name":"Andrew Kelley"},"license":"BSD","devDependencies":{"mocha":"~1.7.1","mkdirp":"~0.3.4"},"dependencies":{"knox":"~0.4.1"},"_id":"s3@0.0.4","dist":{"shasum":"29c4fb12190aa53b42310ce3d29ac59f01954854","tarball":"https://registry.npmjs.org/s3/-/s3-0.0.4.tgz"},"_npmVersion":"1.1.66","_npmUser":{"name":"superjoe","email":"superjoe30@gmail.com"},"maintainers":[{"name":"superjoe","email":"superjoe30@gmail.com"}],"directories":{}},"0.0.5":{"name":"s3","version":"0.0.5","description":"high level amazon s3 client using knox as a backend","main":"index.js","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/superjoe30/node-s3-client"},"keywords":["amazon","s3","high","level","api"],"author":{"name":"Andrew Kelley"},"license":"BSD","devDependencies":{"mocha":"~1.7.1","mkdirp":"~0.3.4"},"dependencies":{"knox":"~0.5.0"},"_id":"s3@0.0.5","dist":{"shasum":"ec7a8f4e24e05c87a2c050f0dd70c706caaa2dc1","tarball":"https://registry.npmjs.org/s3/-/s3-0.0.5.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"superjoe","email":"superjoe30@gmail.com"},"maintainers":[{"name":"superjoe","email":"superjoe30@gmail.com"}],"directories":{}},"0.1.0":{"name":"s3","version":"0.1.0","description":"high level amazon s3 client using knox as a backend","main":"index.js","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/superjoe30/node-s3-client"},"keywords":["amazon","s3","high","level","api"],"author":{"name":"Andrew Kelley"},"license":"BSD","devDependencies":{"mocha":"~1.9.0","mkdirp":"~0.3.5"},"dependencies":{"knox":"~0.7.0"},"_id":"s3@0.1.0","dist":{"shasum":"093505c46150ab91503da5548c5b99c265e6d550","tarball":"https://registry.npmjs.org/s3/-/s3-0.1.0.tgz"},"_from":".","_npmVersion":"1.2.17","_npmUser":{"name":"superjoe","email":"superjoe30@gmail.com"},"maintainers":[{"name":"superjoe","email":"superjoe30@gmail.com"}],"directories":{}},"0.1.1":{"name":"s3","version":"0.1.1","description":"high level amazon s3 client using knox as a backend","main":"index.js","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/superjoe30/node-s3-client"},"keywords":["amazon","s3","high","level","api"],"author":{"name":"Andrew Kelley"},"license":"BSD","devDependencies":{"mocha":"~1.9.0","mkdirp":"~0.3.5"},"dependencies":{"knox":"~0.7.0"},"_id":"s3@0.1.1","dist":{"shasum":"a75f867ddd3d08ff3a76d60925a85fe81d9058ca","tarball":"https://registry.npmjs.org/s3/-/s3-0.1.1.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"superjoe","email":"superjoe30@gmail.com"},"maintainers":[{"name":"superjoe","email":"superjoe30@gmail.com"}],"directories":{}},"0.2.0":{"name":"s3","version":"0.2.0","description":"high level amazon s3 client using knox as a backend","main":"index.js","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/superjoe30/node-s3-client"},"keywords":["amazon","s3","high","level","api"],"author":{"name":"Andrew Kelley"},"license":"BSD","devDependencies":{"mocha":"~1.9.0","mkdirp":"~0.3.5"},"dependencies":{"knox":"~0.7.0"},"bugs":{"url":"https://github.com/superjoe30/node-s3-client/issues"},"_id":"s3@0.2.0","dist":{"shasum":"6f8e6234e03c375624d76a995ef2fff78b42d78e","tarball":"https://registry.npmjs.org/s3/-/s3-0.2.0.tgz"},"_from":".","_npmVersion":"1.2.23","_npmUser":{"name":"superjoe","email":"superjoe30@gmail.com"},"maintainers":[{"name":"superjoe","email":"superjoe30@gmail.com"}],"directories":{}},"0.3.0":{"name":"s3","version":"0.3.0","description":"high level amazon s3 client using knox as a backend","main":"index.js","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/superjoe30/node-s3-client"},"keywords":["amazon","s3","high","level","api"],"author":{"name":"Andrew Kelley"},"license":"BSD","devDependencies":{"mocha":"~1.9.0","mkdirp":"~0.3.5"},"dependencies":{"knox":"~0.8.3"},"bugs":{"url":"https://github.com/superjoe30/node-s3-client/issues"},"_id":"s3@0.3.0","dist":{"shasum":"fe55f03b8be463d455d59bcb8628ce3443c57c6a","tarball":"https://registry.npmjs.org/s3/-/s3-0.3.0.tgz"},"_from":".","_npmVersion":"1.2.25","_npmUser":{"name":"superjoe","email":"superjoe30@gmail.com"},"maintainers":[{"name":"superjoe","email":"superjoe30@gmail.com"}],"directories":{}},"0.3.1":{"name":"s3","version":"0.3.1","description":"high level amazon s3 client using knox as a backend","main":"index.js","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/superjoe30/node-s3-client"},"keywords":["amazon","s3","high","level","api"],"author":{"name":"Andrew Kelley"},"license":"BSD","devDependencies":{"mocha":"~1.9.0","mkdirp":"~0.3.5"},"dependencies":{"knox":"~0.8.3"},"bugs":{"url":"https://github.com/superjoe30/node-s3-client/issues"},"_id":"s3@0.3.1","dist":{"shasum":"76ff09732744b45d785ee1d7901a25eb940030a2","tarball":"https://registry.npmjs.org/s3/-/s3-0.3.1.tgz"},"_from":".","_npmVersion":"1.3.2","_npmUser":{"name":"superjoe","email":"superjoe30@gmail.com"},"maintainers":[{"name":"superjoe","email":"superjoe30@gmail.com"}],"directories":{}},"1.0.0":{"name":"s3","version":"1.0.0","description":"high level amazon s3 client. upload and download files and directories","main":"index.js","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/superjoe30/node-s3-client"},"keywords":["amazon","s3","sync","folder","directory","retry","limit","stream","async"],"author":{"name":"Andrew Kelley"},"license":"BSD","devDependencies":{"mocha":"^1.18.2","ncp":"^0.5.1"},"dependencies":{"aws-sdk":"^2.0.0-rc.16","findit":"^1.2.0","pend":"^1.1.1","stream-counter":"^1.0.0","mkdirp":"^0.5.0","rimraf":"^2.2.8"},"bugs":{"url":"https://github.com/superjoe30/node-s3-client/issues"},"homepage":"https://github.com/superjoe30/node-s3-client","_id":"s3@1.0.0","dist":{"shasum":"222a3ae20655b4afeb4bba94c535d54f997d6c30","tarball":"https://registry.npmjs.org/s3/-/s3-1.0.0.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"superjoe","email":"superjoe30@gmail.com"},"maintainers":[{"name":"superjoe","email":"superjoe30@gmail.com"}],"directories":{}},"1.1.0":{"name":"s3","version":"1.1.0","description":"high level amazon s3 client. upload and download files and directories","main":"index.js","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/superjoe30/node-s3-client"},"keywords":["amazon","s3","sync","folder","directory","retry","limit","stream","async"],"author":{"name":"Andrew Kelley"},"license":"BSD","devDependencies":{"mocha":"^1.18.2","ncp":"^0.5.1"},"dependencies":{"aws-sdk":"^2.0.0-rc.16","findit":"^1.2.0","pend":"^1.1.1","stream-counter":"^1.0.0","mkdirp":"^0.5.0","rimraf":"^2.2.8"},"bugs":{"url":"https://github.com/superjoe30/node-s3-client/issues"},"homepage":"https://github.com/superjoe30/node-s3-client","_id":"s3@1.1.0","dist":{"shasum":"faf1eae40089f6f40a32c6d1c37a19b6ffbf4918","tarball":"https://registry.npmjs.org/s3/-/s3-1.1.0.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"superjoe","email":"superjoe30@gmail.com"},"maintainers":[{"name":"superjoe","email":"superjoe30@gmail.com"}],"directories":{}},"1.1.1":{"name":"s3","version":"1.1.1","description":"high level amazon s3 client. upload and download files and directories","main":"index.js","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/superjoe30/node-s3-client"},"keywords":["amazon","s3","sync","folder","directory","retry","limit","stream","async"],"author":{"name":"Andrew Kelley"},"license":"BSD","devDependencies":{"mocha":"^1.18.2","ncp":"^0.5.1"},"dependencies":{"aws-sdk":"^2.0.0-rc.16","findit":"^1.2.0","pend":"^1.1.1","stream-counter":"^1.0.0","mkdirp":"^0.5.0","rimraf":"^2.2.8","quotemeta":"0.0.0"},"bugs":{"url":"https://github.com/superjoe30/node-s3-client/issues"},"homepage":"https://github.com/superjoe30/node-s3-client","_id":"s3@1.1.1","dist":{"shasum":"a62f4295f3af18b2642b477711eaff0b6517a9e1","tarball":"https://registry.npmjs.org/s3/-/s3-1.1.1.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"superjoe","email":"superjoe30@gmail.com"},"maintainers":[{"name":"superjoe","email":"superjoe30@gmail.com"}],"directories":{}},"1.2.0":{"name":"s3","version":"1.2.0","description":"high level amazon s3 client. upload and download files and directories","main":"index.js","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/superjoe30/node-s3-client"},"keywords":["amazon","s3","sync","folder","directory","retry","limit","stream","async"],"author":{"name":"Andrew Kelley"},"license":"BSD","devDependencies":{"mocha":"^1.18.2","ncp":"^0.5.1"},"dependencies":{"aws-sdk":"^2.0.0-rc.16","findit":"^1.2.0","pend":"^1.1.1","stream-counter":"^1.0.0","mkdirp":"^0.5.0","rimraf":"^2.2.8","quotemeta":"0.0.0"},"bugs":{"url":"https://github.com/superjoe30/node-s3-client/issues"},"homepage":"https://github.com/superjoe30/node-s3-client","_id":"s3@1.2.0","dist":{"shasum":"39017461d1cc45c288f753d9126c91663b370acf","tarball":"https://registry.npmjs.org/s3/-/s3-1.2.0.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"superjoe","email":"superjoe30@gmail.com"},"maintainers":[{"name":"superjoe","email":"superjoe30@gmail.com"}],"directories":{}},"1.2.1":{"name":"s3","version":"1.2.1","description":"high level amazon s3 client. upload and download files and directories","main":"index.js","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/superjoe30/node-s3-client"},"keywords":["amazon","s3","sync","folder","directory","retry","limit","stream","async"],"author":{"name":"Andrew Kelley"},"license":"BSD","devDependencies":{"mocha":"^1.18.2","ncp":"^0.5.1"},"dependencies":{"aws-sdk":"^2.0.0-rc.16","findit":"^1.2.0","pend":"^1.1.1","stream-counter":"^1.0.0","mkdirp":"^0.5.0","rimraf":"^2.2.8","quotemeta":"0.0.0"},"bugs":{"url":"https://github.com/superjoe30/node-s3-client/issues"},"homepage":"https://github.com/superjoe30/node-s3-client","_id":"s3@1.2.1","dist":{"shasum":"8bfa546c86496a246cc3335a21f97e4668a03a9c","tarball":"https://registry.npmjs.org/s3/-/s3-1.2.1.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"superjoe","email":"superjoe30@gmail.com"},"maintainers":[{"name":"superjoe","email":"superjoe30@gmail.com"}],"directories":{}},"1.3.0":{"name":"s3","version":"1.3.0","description":"high level amazon s3 client. upload and download files and directories","main":"index.js","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/superjoe30/node-s3-client"},"keywords":["amazon","s3","sync","folder","directory","retry","limit","stream","async"],"author":{"name":"Andrew Kelley"},"license":"BSD","devDependencies":{"mocha":"^1.18.2","ncp":"^0.5.1"},"dependencies":{"aws-sdk":"^2.0.0-rc.18","findit":"^1.2.0","pend":"^1.1.1","stream-counter":"^1.0.0","mkdirp":"^0.5.0","rimraf":"^2.2.8","quotemeta":"0.0.0"},"bugs":{"url":"https://github.com/superjoe30/node-s3-client/issues"},"homepage":"https://github.com/superjoe30/node-s3-client","_id":"s3@1.3.0","dist":{"shasum":"f81dd256628be6efd712443e0551debf9c726c5d","tarball":"https://registry.npmjs.org/s3/-/s3-1.3.0.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"superjoe","email":"superjoe30@gmail.com"},"maintainers":[{"name":"superjoe","email":"superjoe30@gmail.com"}],"directories":{}},"2.0.0":{"name":"s3","version":"2.0.0","description":"high level amazon s3 client. upload and download files and directories","main":"index.js","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/superjoe30/node-s3-client"},"keywords":["amazon","s3","sync","folder","directory","retry","limit","stream","async"],"author":{"name":"Andrew Kelley"},"license":"BSD","devDependencies":{"mocha":"^1.18.2","ncp":"^0.5.1"},"dependencies":{"aws-sdk":"^2.0.0-rc.18","findit":"^1.2.0","pend":"^1.1.1","stream-counter":"^1.0.0","mkdirp":"^0.5.0","rimraf":"^2.2.8","quotemeta":"0.0.0"},"bugs":{"url":"https://github.com/superjoe30/node-s3-client/issues"},"homepage":"https://github.com/superjoe30/node-s3-client","_id":"s3@2.0.0","_shasum":"1f055af8178aca8212bb95526dd1adf2a24453d5","_from":".","_npmVersion":"1.4.9","_npmUser":{"name":"superjoe","email":"superjoe30@gmail.com"},"maintainers":[{"name":"superjoe","email":"superjoe30@gmail.com"}],"dist":{"shasum":"1f055af8178aca8212bb95526dd1adf2a24453d5","tarball":"https://registry.npmjs.org/s3/-/s3-2.0.0.tgz"},"directories":{}},"3.0.0":{"name":"s3","version":"3.0.0","description":"high level amazon s3 client. upload and download files and directories","main":"index.js","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/superjoe30/node-s3-client"},"keywords":["amazon","s3","sync","folder","directory","retry","limit","stream","async"],"author":{"name":"Andrew Kelley"},"license":"BSD","engines":{"node":">=0.10.20"},"devDependencies":{"mocha":"~1.18.2","ncp":"~0.5.1"},"dependencies":{"aws-sdk":"~2.0.4","findit":"~2.0.0","graceful-fs":"~3.0.2","mkdirp":"~0.5.0","pend":"~1.1.1","rimraf":"~2.2.8","stream-counter":"~1.0.0"},"gitHead":"d038183a91f693c22fde6bf2f46c36f1c09a4927","bugs":{"url":"https://github.com/superjoe30/node-s3-client/issues"},"homepage":"https://github.com/superjoe30/node-s3-client","_id":"s3@3.0.0","_shasum":"28bc452d9be9f381f4c319fed90792121bd7b5ac","_from":".","_npmVersion":"1.4.14","_npmUser":{"name":"superjoe","email":"superjoe30@gmail.com"},"maintainers":[{"name":"superjoe","email":"superjoe30@gmail.com"}],"dist":{"shasum":"28bc452d9be9f381f4c319fed90792121bd7b5ac","tarball":"https://registry.npmjs.org/s3/-/s3-3.0.0.tgz"},"directories":{}},"3.0.1":{"name":"s3","version":"3.0.1","description":"high level amazon s3 client. upload and download files and directories","main":"index.js","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/superjoe30/node-s3-client"},"keywords":["amazon","s3","sync","folder","directory","retry","limit","stream","async"],"author":{"name":"Andrew Kelley"},"license":"BSD","engines":{"node":">=0.10.20"},"devDependencies":{"mocha":"~1.18.2","ncp":"~0.5.1"},"dependencies":{"aws-sdk":"~2.0.4","findit":"~2.0.0","graceful-fs":"~3.0.2","mkdirp":"~0.5.0","pend":"~1.1.1","rimraf":"~2.2.8","stream-counter":"~1.0.0"},"gitHead":"94bbe9487d2e5240cb5f8b8dc0342474cbb87052","bugs":{"url":"https://github.com/superjoe30/node-s3-client/issues"},"homepage":"https://github.com/superjoe30/node-s3-client","_id":"s3@3.0.1","_shasum":"44b59a24ed26781518149eb73f6ce4a8466606c3","_from":".","_npmVersion":"1.4.14","_npmUser":{"name":"superjoe","email":"superjoe30@gmail.com"},"maintainers":[{"name":"superjoe","email":"superjoe30@gmail.com"}],"dist":{"shasum":"44b59a24ed26781518149eb73f6ce4a8466606c3","tarball":"https://registry.npmjs.org/s3/-/s3-3.0.1.tgz"},"directories":{}},"3.0.2":{"name":"s3","version":"3.0.2","description":"high level amazon s3 client. upload and download files and directories","main":"index.js","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/superjoe30/node-s3-client"},"keywords":["amazon","s3","sync","folder","directory","retry","limit","stream","async"],"author":{"name":"Andrew Kelley"},"license":"BSD","engines":{"node":">=0.10.20"},"devDependencies":{"mocha":"~1.18.2","ncp":"~0.5.1"},"dependencies":{"aws-sdk":"~2.0.4","findit":"~2.0.0","graceful-fs":"~3.0.2","mkdirp":"~0.5.0","pend":"~1.1.1","rimraf":"~2.2.8","stream-counter":"~1.0.0"},"gitHead":"f95a19cdb94f9bd46805500323bd10e7b084c8d3","bugs":{"url":"https://github.com/superjoe30/node-s3-client/issues"},"homepage":"https://github.com/superjoe30/node-s3-client","_id":"s3@3.0.2","_shasum":"7fb7d72533dfa652b45f15974a3b60d4c6fcb385","_from":".","_npmVersion":"1.4.14","_npmUser":{"name":"superjoe","email":"superjoe30@gmail.com"},"maintainers":[{"name":"superjoe","email":"superjoe30@gmail.com"}],"dist":{"shasum":"7fb7d72533dfa652b45f15974a3b60d4c6fcb385","tarball":"https://registry.npmjs.org/s3/-/s3-3.0.2.tgz"},"directories":{}},"3.1.0":{"name":"s3","version":"3.1.0","description":"high level amazon s3 client. upload and download files and directories","main":"index.js","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/superjoe30/node-s3-client"},"keywords":["amazon","s3","sync","folder","directory","retry","limit","stream","async"],"author":{"name":"Andrew Kelley"},"license":"BSD","engines":{"node":">=0.10.20"},"devDependencies":{"mocha":"~1.18.2","ncp":"~0.5.1"},"dependencies":{"aws-sdk":"~2.0.4","findit":"~2.0.0","graceful-fs":"~3.0.2","mkdirp":"~0.5.0","pend":"~1.1.1","rimraf":"~2.2.8","stream-counter":"~1.0.0"},"bugs":{"url":"https://github.com/superjoe30/node-s3-client/issues"},"_id":"s3@3.1.0","dist":{"shasum":"aa256a3bafda8747cbaee1f9e733e5bb1b852118","tarball":"https://registry.npmjs.org/s3/-/s3-3.1.0.tgz"},"_from":".","_npmVersion":"1.3.10","_npmUser":{"name":"superjoe","email":"superjoe30@gmail.com"},"maintainers":[{"name":"superjoe","email":"superjoe30@gmail.com"}],"directories":{}},"3.1.1":{"name":"s3","version":"3.1.1","description":"high level amazon s3 client. upload and download files and directories","main":"index.js","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/superjoe30/node-s3-client"},"keywords":["amazon","s3","sync","folder","directory","retry","limit","stream","async"],"author":{"name":"Andrew Kelley"},"license":"BSD","engines":{"node":">=0.10.20"},"devDependencies":{"mocha":"~1.18.2","ncp":"~0.5.1"},"dependencies":{"aws-sdk":"~2.0.4","findit":"~2.0.0","graceful-fs":"~3.0.2","mkdirp":"~0.5.0","pend":"~1.1.1","rimraf":"~2.2.8","stream-counter":"~1.0.0"},"bugs":{"url":"https://github.com/superjoe30/node-s3-client/issues"},"_id":"s3@3.1.1","dist":{"shasum":"0bbf91bac1829bc295aba4d96fa39e4f40d4b07a","tarball":"https://registry.npmjs.org/s3/-/s3-3.1.1.tgz"},"_from":".","_npmVersion":"1.3.10","_npmUser":{"name":"superjoe","email":"superjoe30@gmail.com"},"maintainers":[{"name":"superjoe","email":"superjoe30@gmail.com"}],"directories":{}},"3.1.2":{"name":"s3","version":"3.1.2","description":"high level amazon s3 client. upload and download files and directories","main":"index.js","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/superjoe30/node-s3-client"},"keywords":["amazon","s3","sync","folder","directory","retry","limit","stream","async"],"author":{"name":"Andrew Kelley"},"license":"MIT","engines":{"node":">=0.10.20"},"devDependencies":{"mocha":"~1.18.2","ncp":"~0.5.1"},"dependencies":{"aws-sdk":"~2.0.6","findit":"~2.0.0","graceful-fs":"~3.0.2","mkdirp":"~0.5.0","pend":"~1.1.1","rimraf":"~2.2.8","stream-counter":"~1.0.0"},"bugs":{"url":"https://github.com/superjoe30/node-s3-client/issues"},"_id":"s3@3.1.2","dist":{"shasum":"8927977cd7a1ca98dc381c5a7f4863001ea0ed77","tarball":"https://registry.npmjs.org/s3/-/s3-3.1.2.tgz"},"_from":".","_npmVersion":"1.3.10","_npmUser":{"name":"superjoe","email":"superjoe30@gmail.com"},"maintainers":[{"name":"superjoe","email":"superjoe30@gmail.com"}],"directories":{}},"3.1.3":{"name":"s3","version":"3.1.3","description":"high level amazon s3 client. upload and download files and directories","main":"index.js","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/superjoe30/node-s3-client"},"keywords":["amazon","s3","sync","folder","directory","retry","limit","stream","async"],"author":{"name":"Andrew Kelley"},"license":"MIT","engines":{"node":">=0.10.20"},"devDependencies":{"mocha":"~1.18.2","ncp":"~0.5.1"},"dependencies":{"aws-sdk":"~2.0.8","findit":"~2.0.0","graceful-fs":"~3.0.2","mkdirp":"~0.5.0","pend":"~1.1.1","rimraf":"~2.2.8","stream-counter":"~1.0.0"},"bugs":{"url":"https://github.com/superjoe30/node-s3-client/issues"},"_id":"s3@3.1.3","dist":{"shasum":"aa10161da0fc7bcf2453cab0f8eca7e103ebb651","tarball":"https://registry.npmjs.org/s3/-/s3-3.1.3.tgz"},"_from":".","_npmVersion":"1.3.10","_npmUser":{"name":"superjoe","email":"superjoe30@gmail.com"},"maintainers":[{"name":"superjoe","email":"superjoe30@gmail.com"}],"directories":{}},"4.0.0":{"name":"s3","version":"4.0.0","description":"high level amazon s3 client. upload and download files and directories","main":"lib/index.js","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/superjoe30/node-s3-client"},"keywords":["amazon","s3","sync","folder","directory","retry","limit","stream","async","parallel","multipart","size"],"author":{"name":"Andrew Kelley"},"license":"MIT","engines":{"node":">=0.10.20"},"devDependencies":{"mocha":"~1.21.4","ncp":"~0.6.0"},"dependencies":{"aws-sdk":"~2.0.12","findit":"~2.0.0","graceful-fs":"~3.0.2","mkdirp":"~0.5.0","pend":"~1.1.2","rimraf":"~2.2.8","fd-slicer":"~0.1.0"},"bugs":{"url":"https://github.com/superjoe30/node-s3-client/issues"},"_id":"s3@4.0.0","dist":{"shasum":"7df7bc1861f87afbf12855173fbba9728bf7019b","tarball":"https://registry.npmjs.org/s3/-/s3-4.0.0.tgz"},"_from":".","_npmVersion":"1.3.10","_npmUser":{"name":"superjoe","email":"superjoe30@gmail.com"},"maintainers":[{"name":"superjoe","email":"superjoe30@gmail.com"}],"directories":{}},"4.1.0":{"name":"s3","version":"4.1.0","description":"high level amazon s3 client. upload and download files and directories","main":"lib/index.js","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/andrewrk/node-s3-client"},"keywords":["amazon","s3","sync","folder","directory","retry","limit","stream","async","parallel","multipart","size"],"author":{"name":"Andrew Kelley"},"license":"MIT","engines":{"node":">=0.10.20"},"devDependencies":{"mocha":"~1.21.4","ncp":"~0.6.0"},"dependencies":{"aws-sdk":"~2.0.12","findit":"~2.0.0","graceful-fs":"~3.0.2","mkdirp":"~0.5.0","pend":"~1.1.2","rimraf":"~2.2.8","fd-slicer":"~0.1.0","mime":"~1.2.11"},"bugs":{"url":"https://github.com/andrewrk/node-s3-client/issues"},"directories":{"test":"test"},"_id":"s3@4.1.0","dist":{"shasum":"0acd2475a07ebc3d55a18663d3a2a0f2e337617a","tarball":"https://registry.npmjs.org/s3/-/s3-4.1.0.tgz"},"_from":".","_npmVersion":"1.3.10","_npmUser":{"name":"superjoe","email":"superjoe30@gmail.com"},"maintainers":[{"name":"superjoe","email":"superjoe30@gmail.com"}]},"4.1.1":{"name":"s3","version":"4.1.1","description":"high level amazon s3 client. upload and download files and directories","main":"lib/index.js","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/andrewrk/node-s3-client"},"keywords":["amazon","s3","sync","folder","directory","retry","limit","stream","async","parallel","multipart","size"],"author":{"name":"Andrew Kelley"},"license":"MIT","engines":{"node":">=0.10.20"},"devDependencies":{"mocha":"~1.21.4","ncp":"~0.6.0"},"dependencies":{"aws-sdk":"~2.0.12","findit":"~2.0.0","graceful-fs":"~3.0.2","mkdirp":"~0.5.0","pend":"~1.1.2","rimraf":"~2.2.8","fd-slicer":"~0.1.0","mime":"~1.2.11"},"bugs":{"url":"https://github.com/andrewrk/node-s3-client/issues"},"directories":{"test":"test"},"_id":"s3@4.1.1","dist":{"shasum":"9b04d2b5cf6ba7f70746e36ffa0e4a130470daec","tarball":"https://registry.npmjs.org/s3/-/s3-4.1.1.tgz"},"_from":".","_npmVersion":"1.3.10","_npmUser":{"name":"superjoe","email":"superjoe30@gmail.com"},"maintainers":[{"name":"superjoe","email":"superjoe30@gmail.com"}]},"4.2.0":{"name":"s3","version":"4.2.0","description":"high level amazon s3 client. upload and download files and directories","main":"lib/index.js","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/andrewrk/node-s3-client"},"keywords":["amazon","s3","sync","folder","directory","retry","limit","stream","async","parallel","multipart","size"],"author":{"name":"Andrew Kelley"},"license":"MIT","engines":{"node":">=0.10.20"},"devDependencies":{"mocha":"~1.21.4","ncp":"~0.6.0"},"dependencies":{"aws-sdk":"~2.0.17","findit":"~2.0.0","graceful-fs":"~3.0.2","mkdirp":"~0.5.0","pend":"~1.1.2","rimraf":"~2.2.8","fd-slicer":"~0.1.0","mime":"~1.2.11"},"bugs":{"url":"https://github.com/andrewrk/node-s3-client/issues"},"directories":{"test":"test"},"_id":"s3@4.2.0","dist":{"shasum":"7c19255d57a8fd45761d2eeb2f720316aa5775c9","tarball":"https://registry.npmjs.org/s3/-/s3-4.2.0.tgz"},"_from":".","_npmVersion":"1.3.10","_npmUser":{"name":"superjoe","email":"superjoe30@gmail.com"},"maintainers":[{"name":"superjoe","email":"superjoe30@gmail.com"}]},"4.3.0":{"name":"s3","version":"4.3.0","description":"high level amazon s3 client. upload and download files and directories","main":"lib/index.js","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/andrewrk/node-s3-client"},"keywords":["amazon","s3","sync","folder","directory","retry","limit","stream","async","parallel","multipart","size"],"author":{"name":"Andrew Kelley"},"license":"MIT","engines":{"node":">=0.10.20"},"devDependencies":{"mocha":"~1.21.4","ncp":"~0.6.0"},"dependencies":{"aws-sdk":"~2.0.19","findit":"~2.0.0","graceful-fs":"~3.0.2","mkdirp":"~0.5.0","pend":"~1.1.2","rimraf":"~2.2.8","fd-slicer":"~0.1.0","mime":"~1.2.11","streamsink":"~1.2.0"},"bugs":{"url":"https://github.com/andrewrk/node-s3-client/issues"},"directories":{"test":"test"},"_id":"s3@4.3.0","dist":{"shasum":"3f358e3754b4db7da43b9d38b535a464ec3b5e8f","tarball":"https://registry.npmjs.org/s3/-/s3-4.3.0.tgz"},"_from":".","_npmVersion":"1.3.10","_npmUser":{"name":"superjoe","email":"superjoe30@gmail.com"},"maintainers":[{"name":"superjoe","email":"superjoe30@gmail.com"}]},"4.3.1":{"name":"s3","version":"4.3.1","description":"high level amazon s3 client. upload and download files and directories","main":"lib/index.js","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/andrewrk/node-s3-client"},"keywords":["amazon","s3","sync","folder","directory","retry","limit","stream","async","parallel","multipart","size"],"author":{"name":"Andrew Kelley"},"license":"MIT","engines":{"node":">=0.10.20"},"devDependencies":{"mocha":"~1.21.4","ncp":"~1.0.1"},"dependencies":{"aws-sdk":"~2.0.19","findit":"~2.0.0","graceful-fs":"~3.0.3","mkdirp":"~0.5.0","pend":"~1.1.3","rimraf":"~2.2.8","fd-slicer":"~0.2.1","mime":"~1.2.11","streamsink":"~1.2.0"},"bugs":{"url":"https://github.com/andrewrk/node-s3-client/issues"},"directories":{"test":"test"},"_id":"s3@4.3.1","dist":{"shasum":"0909459a254fe71fede250366de1bf93f6ab5fb7","tarball":"https://registry.npmjs.org/s3/-/s3-4.3.1.tgz"},"_from":".","_npmVersion":"1.3.10","_npmUser":{"name":"superjoe","email":"superjoe30@gmail.com"},"maintainers":[{"name":"superjoe","email":"superjoe30@gmail.com"}]},"4.4.0":{"name":"s3","version":"4.4.0","description":"high level amazon s3 client. upload and download files and directories","main":"lib/index.js","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/andrewrk/node-s3-client"},"keywords":["amazon","s3","sync","folder","directory","retry","limit","stream","async","parallel","multipart","size"],"author":{"name":"Andrew Kelley"},"license":"MIT","engines":{"node":">=0.10.20"},"devDependencies":{"mocha":"~2.0.1","ncp":"~1.0.1"},"dependencies":{"aws-sdk":"~2.0.31","fd-slicer":"~1.0.0","findit2":"~2.2.3","graceful-fs":"~3.0.5","mime":"~1.2.11","mkdirp":"~0.5.0","pend":"~1.2.0","rimraf":"~2.2.8","streamsink":"~1.2.0"},"bugs":{"url":"https://github.com/andrewrk/node-s3-client/issues"},"directories":{"test":"test"},"gitHead":"8e9cd927cb40c121256c46bd321998bd2aa804d0","homepage":"https://github.com/andrewrk/node-s3-client","_id":"s3@4.4.0","_shasum":"56a4f775515a7b6b9c8e5c6b1ab51f9037669f1f","_from":".","_npmVersion":"2.5.1","_nodeVersion":"0.12.0","_npmUser":{"name":"superjoe","email":"superjoe30@gmail.com"},"maintainers":[{"name":"superjoe","email":"superjoe30@gmail.com"}],"dist":{"shasum":"56a4f775515a7b6b9c8e5c6b1ab51f9037669f1f","tarball":"https://registry.npmjs.org/s3/-/s3-4.4.0.tgz"}}},"readme":"# High Level Amazon S3 Client\n\n## Features\n\n * Automatically retry a configurable number of times when S3 returns an error.\n * Includes logic to make multiple requests when there is a 1000 object limit.\n * Ability to set a limit on the maximum parallelization of S3 requests.\n   Retries get pushed to the end of the paralellization queue.\n * Ability to sync a dir to and from S3.\n * Progress reporting.\n * Supports files of any size (up to S3's maximum 5 TB object size limit).\n * Uploads large files quickly using parallel multipart uploads.\n * Uses heuristics to compute multipart ETags client-side to avoid uploading\n   or downloading files unnecessarily.\n * Automatically provide Content-Type for uploads based on file extension.\n\nSee also the companion CLI tool which is meant to be a drop-in replacement for\ns3cmd: [s3-cli](https://github.com/andrewrk/node-s3-cli).\n\n## Synopsis\n\n### Create a client\n\n```js\nvar s3 = require('s3');\n\nvar client = s3.createClient({\n  maxAsyncS3: 20,     // this is the default\n  s3RetryCount: 3,    // this is the default\n  s3RetryDelay: 1000, // this is the default\n  multipartUploadThreshold: 20971520, // this is the default (20 MB)\n  multipartUploadSize: 15728640, // this is the default (15 MB)\n  s3Options: {\n    accessKeyId: \"your s3 key\",\n    secretAccessKey: \"your s3 secret\",\n    // any other options are passed to new AWS.S3()\n    // See: http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/Config.html#constructor-property\n  },\n});\n```\n\n### Create a client from existing AWS.S3 object\n\n```js\nvar s3 = require('s3');\nvar awsS3Client = new AWS.S3(s3Options);\nvar options = {\n  s3Client: awsS3Client,\n  // more options available. See API docs below.\n};\nvar client = s3.createClient(options);\n```\n\n### Upload a file to S3\n\n```js\nvar params = {\n  localFile: \"some/local/file\",\n\n  s3Params: {\n    Bucket: \"s3 bucket name\",\n    Key: \"some/remote/file\",\n    // other options supported by putObject, except Body and ContentLength.\n    // See: http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#putObject-property\n  },\n};\nvar uploader = client.uploadFile(params);\nuploader.on('error', function(err) {\n  console.error(\"unable to upload:\", err.stack);\n});\nuploader.on('progress', function() {\n  console.log(\"progress\", uploader.progressMd5Amount,\n            uploader.progressAmount, uploader.progressTotal);\n});\nuploader.on('end', function() {\n  console.log(\"done uploading\");\n});\n```\n\n### Download a file from S3\n\n```js\nvar params = {\n  localFile: \"some/local/file\",\n\n  s3Params: {\n    Bucket: \"s3 bucket name\",\n    Key: \"some/remote/file\",\n    // other options supported by getObject\n    // See: http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#getObject-property\n  },\n};\nvar downloader = client.downloadFile(params);\ndownloader.on('error', function(err) {\n  console.error(\"unable to download:\", err.stack);\n});\ndownloader.on('progress', function() {\n  console.log(\"progress\", downloader.progressAmount, downloader.progressTotal);\n});\ndownloader.on('end', function() {\n  console.log(\"done downloading\");\n});\n```\n\n### Sync a directory to S3\n\n```js\nvar params = {\n  localDir: \"some/local/dir\",\n  deleteRemoved: true, // default false, whether to remove s3 objects\n                       // that have no corresponding local file.\n\n  s3Params: {\n    Bucket: \"s3 bucket name\",\n    Prefix: \"some/remote/dir/\",\n    // other options supported by putObject, except Body and ContentLength.\n    // See: http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#putObject-property\n  },\n};\nvar uploader = client.uploadDir(params);\nuploader.on('error', function(err) {\n  console.error(\"unable to sync:\", err.stack);\n});\nuploader.on('progress', function() {\n  console.log(\"progress\", uploader.progressAmount, uploader.progressTotal);\n});\nuploader.on('end', function() {\n  console.log(\"done uploading\");\n});\n```\n\n## Tips\n\n * Consider increasing the socket pool size in the `http` and `https` global\n   agents. This will improve bandwidth when using `uploadDir` and `downloadDir`\n   functions. For example:\n\n   ```js\n   http.globalAgent.maxSockets = https.globalAgent.maxSockets = 20;\n   ```\n\n## API Documentation\n\n### s3.AWS\n\nThis contains a reference to the aws-sdk module. It is a valid use case to use\nboth this module and the lower level aws-sdk module in tandem.\n\n### s3.createClient(options)\n\nCreates an S3 client.\n\n`options`:\n\n * `s3Client` - optional, an instance of `AWS.S3`. Leave blank if you provide `s3Options`.\n * `s3Options` - optional. leave blank if you provide `s3Client`.\n   - See AWS SDK documentation for available options which are passed to `new AWS.S3()`:\n     http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/Config.html#constructor-property\n * `maxAsyncS3` - maximum number of simultaneous requests this client will\n   ever have open to S3. defaults to `20`.\n * `s3RetryCount` - how many times to try an S3 operation before giving up.\n   Default 3.\n * `s3RetryDelay` - how many milliseconds to wait before retrying an S3\n   operation. Default 1000.\n * `multipartUploadThreshold` - if a file is this many bytes or greater, it\n   will be uploaded via a multipart request. Default is 20MB. Minimum is 5MB.\n   Maximum is 5GB.\n * `multipartUploadSize` - when uploading via multipart, this is the part size.\n   The minimum size is 5MB. The maximum size is 5GB. Default is 15MB. Note that\n   S3 has a maximum of 10000 parts for a multipart upload, so if this value is\n   too small, it will be ignored in favor of the minimum necessary value\n   required to upload the file.\n\n### s3.getPublicUrl(bucket, key, [bucketLocation])\n\n * `bucket` S3 bucket\n * `key` S3 key\n * `bucketLocation` string, one of these:\n   - \"\" (default) - US Standard\n   - \"eu-west-1\"\n   - \"us-west-1\"\n   - \"us-west-2\"\n   - \"ap-southeast-1\"\n   - \"ap-southeast-2\"\n   - \"ap-northeast-1\"\n   - \"sa-east-1\"\n\nYou can find out your bucket location programatically by using this API:\nhttp://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#getBucketLocation-property\n\nreturns a string which looks like this:\n\n`https://s3.amazonaws.com/bucket/key`\n\nor maybe this if you are not in US Standard:\n\n`https://s3-eu-west-1.amazonaws.com/bucket/key`\n\n### s3.getPublicUrlHttp(bucket, key)\n\n * `bucket` S3 Bucket\n * `key` S3 Key\n\nWorks for any region, and returns a string which looks like this:\n\n`http://bucket.s3.amazonaws.com/key`\n\n### client.uploadFile(params)\n\nSee http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#putObject-property\n\n`params`:\n\n * `s3Params`: params to pass to AWS SDK `putObject`.\n * `localFile`: path to the file on disk you want to upload to S3.\n * (optional) `defaultContentType`: Unless you explicitly set the `ContentType`\n   parameter in `s3Params`, it will be automatically set for you based on the\n   file extension of `localFile`. If the extension is unrecognized,\n   `defaultContentType` will be used instead. Defaults to\n   `application/octet-stream`.\n\nThe difference between using AWS SDK `putObject` and this one:\n\n * This works with files, not streams or buffers.\n * If the reported MD5 upon upload completion does not match, it retries.\n * If the file size is large enough, uses multipart upload to upload parts in\n   parallel.\n * Retry based on the client's retry settings.\n * Progress reporting.\n * Sets the `ContentType` based on file extension if you do not provide it.\n\nReturns an `EventEmitter` with these properties:\n\n * `progressMd5Amount`\n * `progressAmount`\n * `progressTotal`\n\nAnd these events:\n\n * `'error' (err)`\n * `'end' (data)` - emitted when the file is uploaded successfully\n   - `data` is the same object that you get from `putObject` in AWS SDK\n * `'progress'` - emitted when `progressMd5Amount`, `progressAmount`, and\n   `progressTotal` properties change. Note that it is possible for progress to\n   go backwards when an upload fails and must be retried.\n * `'fileOpened' (fdSlicer)` - emitted when `localFile` has been opened. The file\n   is opened with the [fd-slicer](https://github.com/andrewrk/node-fd-slicer)\n   module because we might need to read from multiple locations in the file at\n   the same time. `fdSlicer` is an object for which you can call\n   `createReadStream(options)`. See the fd-slicer README for more information.\n * `'fileClosed'` - emitted when `localFile` has been closed.\n\nAnd these methods:\n\n * `abort()` - call this to stop the find operation.\n\n### client.downloadFile(params)\n\nSee http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#getObject-property\n\n`params`:\n\n * `localFile` - the destination path on disk to write the s3 object into\n * `s3Params`: params to pass to AWS SDK `getObject`.\n\nThe difference between using AWS SDK `getObject` and this one:\n\n * This works with a destination file, not a stream or a buffer.\n * If the reported MD5 upon download completion does not match, it retries.\n * Retry based on the client's retry settings.\n * Progress reporting.\n\nReturns an `EventEmitter` with these properties:\n\n * `progressAmount`\n * `progressTotal`\n\nAnd these events:\n\n * `'error' (err)`\n * `'end'` - emitted when the file is downloaded successfully\n * `'progress'` - emitted when `progressAmount` and `progressTotal`\n   properties change.\n\n### client.downloadBuffer(s3Params)\n\nhttp://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#getObject-property\n\n * `s3Params`: params to pass to AWS SDK `getObject`.\n\nThe difference between using AWS SDK `getObject` and this one:\n\n * This works with a buffer only.\n * If the reported MD5 upon download completion does not match, it retries.\n * Retry based on the client's retry settings.\n * Progress reporting.\n\nReturns an `EventEmitter` with these properties:\n\n * `progressAmount`\n * `progressTotal`\n\nAnd these events:\n\n * `'error' (err)`\n * `'end' (buffer)` - emitted when the file is downloaded successfully.\n   `buffer` is a `Buffer` containing the object data.\n * `'progress'` - emitted when `progressAmount` and `progressTotal`\n   properties change.\n\n### client.downloadStream(s3Params)\n\nhttp://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#getObject-property\n\n * `s3Params`: params to pass to AWS SDK `getObject`.\n\nThe difference between using AWS SDK `getObject` and this one:\n\n * This works with a stream only.\n\nIf you want retries, progress, or MD5 checking, you must code it yourself.\n\nReturns a `ReadableStream` with these additional events:\n\n * `'httpHeaders' (statusCode, headers)` - contains the HTTP response\n   headers and status code.\n\n### client.listObjects(params)\n\nSee http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#listObjects-property\n\n`params`:\n\n * `s3Params` - params to pass to AWS SDK `listObjects`.\n * (optional) `recursive` - `true` or `false` whether or not you want to recurse\n   into directories. Default `false`.\n\nNote that if you set `Delimiter` in `s3Params` then you will get a list of\nobjects and folders in the directory you specify. You probably do not want to\nset `recursive` to `true` at the same time as specifying a `Delimiter` because\nthis will cause a request per directory. If you want all objects that share a\nprefix, leave the `Delimiter` option `null` or `undefined`.\n\nBe sure that `s3Params.Prefix` ends with a trailing slash (`/`) unless you\nare requesting the top-level listing, in which case `s3Params.Prefix` should\nbe empty string.\n\nThe difference between using AWS SDK `listObjects` and this one:\n\n * Retries based on the client's retry settings.\n * Supports recursive directory listing.\n * Makes multiple requests if the number of objects to list is greater than 1000.\n\nReturns an `EventEmitter` with these properties:\n\n * `progressAmount`\n * `objectsFound`\n * `dirsFound`\n\nAnd these events:\n\n * `'error' (err)`\n * `'end'` - emitted when done listing and no more 'data' events will be emitted.\n * `'data' (data)` - emitted when a batch of objects are found. This is\n   the same as the `data` object in AWS SDK.\n * `'progress'` - emitted when `progressAmount`, `objectsFound`, and\n   `dirsFound` properties change.\n\nAnd these methods:\n\n * `abort()` - call this to stop the find operation.\n\n### client.deleteObjects(s3Params)\n\nSee http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#deleteObjects-property\n\n`s3Params` are the same.\n\nThe difference between using AWS SDK `deleteObjects` and this one:\n\n * Retry based on the client's retry settings.\n * Make multiple requests if the number of objects you want to delete is\n   greater than 1000.\n\nReturns an `EventEmitter` with these properties:\n\n * `progressAmount`\n * `progressTotal`\n\nAnd these events:\n\n * `'error' (err)`\n * `'end'` - emitted when all objects are deleted.\n * `'progress'` - emitted when the `progressAmount` or `progressTotal` properties change.\n * `'data' (data)` - emitted when a request completes. There may be more.\n\n### client.uploadDir(params)\n\nSyncs an entire directory to S3.\n\n`params`:\n\n * `localDir` - source path on local file system to sync to S3\n * `s3Params`\n   - `Prefix` (required)\n   - `Bucket` (required)\n * (optional) `deleteRemoved` - delete s3 objects with no corresponding local file.\n   default false\n * (optional) `getS3Params` - function which will be called for every file that\n   needs to be uploaded. You can use this to skip some files. See below.\n * (optional) `defaultContentType`: Unless you explicitly set the `ContentType`\n   parameter in `s3Params`, it will be automatically set for you based on the\n   file extension of `localFile`. If the extension is unrecognized,\n   `defaultContentType` will be used instead. Defaults to\n   `application/octet-stream`.\n * (optional) `followSymlinks` - Set this to `false` to ignore symlinks.\n   Defaults to `true`.\n\n```js\nfunction getS3Params(localFile, stat, callback) {\n  // call callback like this:\n  var err = new Error(...); // only if there is an error\n  var s3Params = { // if there is no error\n    ContentType: getMimeType(localFile), // just an example\n  };\n  // pass `null` for `s3Params` if you want to skip uploading this file.\n  callback(err, s3Params);\n}\n```\n\nReturns an `EventEmitter` with these properties:\n\n * `progressAmount`\n * `progressTotal`\n * `progressMd5Amount`\n * `progressMd5Total`\n * `deleteAmount`\n * `deleteTotal`\n * `filesFound`\n * `objectsFound`\n * `doneFindingFiles`\n * `doneFindingObjects`\n * `doneMd5`\n\nAnd these events:\n\n * `'error' (err)`\n * `'end'` - emitted when all files are uploaded\n * `'progress'` - emitted when any of the above progress properties change.\n * `'fileUploadStart' (localFilePath, s3Key)` - emitted when a file begins\n   uploading.\n * `'fileUploadEnd' (localFilePath, s3Key)` - emitted when a file successfully\n   finishes uploading.\n\n`uploadDir` works like this:\n\n 0. Start listing all S3 objects for the target `Prefix`. S3 guarantees\n    returned objects to be in sorted order.\n 0. Meanwhile, recursively find all files in `localDir`.\n 0. Once all local files are found, we sort them (the same way that S3 sorts).\n 0. Next we iterate over the sorted local file list one at a time, computing\n    MD5 sums.\n 0. Now S3 object listing and MD5 sum computing are happening in parallel. As\n    each operation progresses we compare both sorted lists side-by-side,\n    iterating over them one at a time, uploading files whose MD5 sums don't\n    match the remote object (or the remote object is missing), and, if\n    `deleteRemoved` is set, deleting remote objects whose corresponding local\n    files are missing.\n\n### client.downloadDir(params)\n\nSyncs an entire directory from S3.\n\n`params`:\n\n * `localDir` - destination directory on local file system to sync to\n * `s3Params`\n   - `Prefix` (required)\n   - `Bucket` (required)\n * (optional) `deleteRemoved` - delete local files with no corresponding s3 object. default `false`\n * (optional) `getS3Params` - function which will be called for every object that\n   needs to be downloaded. You can use this to skip downloading some objects.\n   See below.\n * (optional) `followSymlinks` - Set this to `false` to ignore symlinks.\n   Defaults to `true`.\n\n```js\nfunction getS3Params(localFile, s3Object, callback) {\n  // localFile is the destination path where the object will be written to\n  // s3Object is same as one element in the `Contents` array from here:\n  // http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#listObjects-property\n\n  // call callback like this:\n  var err = new Error(...); // only if there is an error\n  var s3Params = { // if there is no error\n    VersionId: \"abcd\", // just an example\n  };\n  // pass `null` for `s3Params` if you want to skip downloading this object.\n  callback(err, s3Params);\n}\n```\n\nReturns an `EventEmitter` with these properties:\n\n * `progressAmount`\n * `progressTotal`\n * `progressMd5Amount`\n * `progressMd5Total`\n * `deleteAmount`\n * `deleteTotal`\n * `filesFound`\n * `objectsFound`\n * `doneFindingFiles`\n * `doneFindingObjects`\n * `doneMd5`\n\nAnd these events:\n\n * `'error' (err)`\n * `'end'` - emitted when all files are downloaded\n * `'progress'` - emitted when any of the progress properties above change\n * `'fileDownloadStart' (localFilePath, s3Key)` - emitted when a file begins\n   downloading.\n * `'fileDownloadEnd' (localFilePath, s3Key)` - emitted when a file successfully\n   finishes downloading.\n\n`downloadDir` works like this:\n\n 0. Start listing all S3 objects for the target `Prefix`. S3 guarantees\n    returned objects to be in sorted order.\n 0. Meanwhile, recursively find all files in `localDir`.\n 0. Once all local files are found, we sort them (the same way that S3 sorts).\n 0. Next we iterate over the sorted local file list one at a time, computing\n    MD5 sums.\n 0. Now S3 object listing and MD5 sum computing are happening in parallel. As\n    each operation progresses we compare both sorted lists side-by-side,\n    iterating over them one at a time, downloading objects whose MD5 sums don't\n    match the local file (or the local file is missing), and, if\n    `deleteRemoved` is set, deleting local files whose corresponding objects\n    are missing.\n\n### client.deleteDir(s3Params)\n\nDeletes an entire directory on S3.\n\n`s3Params`:\n\n * `Bucket`\n * `Prefix`\n * (optional) `MFA`\n\nReturns an `EventEmitter` with these properties:\n\n * `progressAmount`\n * `progressTotal`\n\nAnd these events:\n\n * `'error' (err)`\n * `'end'` - emitted when all objects are deleted.\n * `'progress'` - emitted when the `progressAmount` or `progressTotal` properties change.\n\n`deleteDir` works like this:\n\n 0. Start listing all objects in a bucket recursively. S3 returns 1000 objects\n    per response.\n 0. For each response that comes back with a list of objects in the bucket,\n    immediately send a delete request for all of them.\n\n### client.copyObject(s3Params)\n\nSee http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#copyObject-property\n\n`s3Params` are the same. Don't forget that `CopySource` must contain the\nsource bucket name as well as the source key name.\n\nThe difference between using AWS SDK `copyObject` and this one:\n\n * Retry based on the client's retry settings.\n\nReturns an `EventEmitter` with these events:\n\n * `'error' (err)`\n * `'end' (data)`\n\n### client.moveObject(s3Params)\n\nSee http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#copyObject-property\n\n`s3Params` are the same. Don't forget that `CopySource` must contain the\nsource bucket name as well as the source key name.\n\nUnder the hood, this uses `copyObject` and then `deleteObjects` only if the\ncopy succeeded.\n\nReturns an `EventEmitter` with these events:\n\n * `'error' (err)`\n * `'copySuccess' (data)`\n * `'end' (data)`\n\n## Testing\n\n`S3_KEY=<valid_s3_key> S3_SECRET=<valid_s3_secret> S3_BUCKET=<valid_s3_bucket> npm test`\n\nTests upload and download large amounts of data to and from S3. The test\ntimeout is set to 40 seconds because Internet connectivity waries wildly.\n","maintainers":[{"name":"superjoe","email":"superjoe30@gmail.com"}],"time":{"modified":"2015-02-18T18:01:58.300Z","created":"2012-11-27T02:37:54.160Z","0.0.3":"2012-11-27T02:37:56.007Z","0.0.4":"2012-12-02T22:54:53.479Z","0.0.5":"2013-01-26T01:16:19.985Z","0.1.0":"2013-04-09T16:52:50.246Z","0.1.1":"2013-04-14T16:56:25.001Z","0.2.0":"2013-05-30T05:24:43.852Z","0.3.0":"2013-06-13T10:42:20.030Z","0.3.1":"2013-07-16T15:53:36.513Z","1.0.0":"2014-05-15T07:47:15.569Z","1.1.0":"2014-05-15T16:17:02.279Z","1.1.1":"2014-05-16T19:20:08.852Z","1.2.0":"2014-05-17T00:14:24.818Z","1.2.1":"2014-05-17T06:05:57.287Z","1.3.0":"2014-05-23T01:00:10.505Z","2.0.0":"2014-05-28T21:10:43.616Z","3.0.0":"2014-07-02T05:28:21.367Z","3.0.1":"2014-07-02T05:50:53.518Z","3.0.2":"2014-07-02T16:27:02.749Z","3.1.0":"2014-07-07T18:03:56.292Z","3.1.1":"2014-07-07T18:37:13.500Z","3.1.2":"2014-07-10T21:30:05.040Z","3.1.3":"2014-07-19T22:19:37.040Z","4.0.0":"2014-08-14T17:50:34.085Z","4.1.0":"2014-08-15T17:19:59.497Z","4.1.1":"2014-08-15T18:54:05.972Z","4.2.0":"2014-09-16T01:01:50.862Z","4.3.0":"2014-10-09T18:28:57.886Z","4.3.1":"2014-10-09T21:58:54.216Z","4.4.0":"2015-02-18T18:01:58.300Z"},"author":{"name":"Andrew Kelley"},"repository":{"type":"git","url":"https://github.com/andrewrk/node-s3-client"},"users":{"patmcc":true,"knownasilya":true,"psypersky":true,"denissellu":true,"micheleorsi":true,"gdbtek":true,"fabioelizandro":true,"ludoo0d0a":true,"ajduke":true,"labithiotis":true,"riyadhalnur":true,"jebai0521":true,"itonyyo":true,"iamwiz":true,"jpepe":true,"jason0518":true,"markthethomas":true,"roryrjb":true,"brandonb927":true,"arnold-almeida":true,"roxnz":true,"wenbing":true,"parkerproject":true,"jasonpearson":true,"snailterror":true,"nickdugger":true,"esperluette":true,"shriharishastry":true,"arnoldstoba":true,"carlosvillademor":true,"gerst20051":true,"nmccready":true,"dimonfox":true,"aldofunes":true,"jonathanlurie":true,"debearloper":true,"softwind":true,"mjurincic":true},"keywords":["amazon","s3","sync","folder","directory","retry","limit","stream","async","parallel","multipart","size"],"bugs":{"url":"https://github.com/andrewrk/node-s3-client/issues"},"license":"MIT","readmeFilename":"README.md","homepage":"https://github.com/andrewrk/node-s3-client","_attachments":{},"_etag":"\"CJGUHU437QOML3C2KLXJ95LVL\""}